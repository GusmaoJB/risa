% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_overlap_kernel.R
\name{get_overlap_kernel}
\alias{get_overlap_kernel}
\title{Compute overlap hotspots from two reclassified rasters}
\usage{
get_overlap_kernel(
  x,
  y,
  n_classes = 3,
  out_classes = n_classes,
  method = c("product", "sum", "geom_mean", "max"),
  resample_method = "near",
  output_layer_type = c("shp", "raster", "both"),
  quiet = TRUE
)
}
\arguments{
\item{x, y}{Single-layer `terra::SpatRaster` with the same CRS; values are class codes.}

\item{n_classes}{Integer: number of classes in the inputs (default 3).}

\item{out_classes}{Integer: number of classes in the output (default = `n_classes`).}

\item{method}{Combination rule: `"product"` (default), `"sum"`, `"geom_mean"`, or `"max"`.}

\item{resample_method}{Resampling to align `y` to `x` when grids differ. For class rasters,
the default `"near"` preserves class labels.}

\item{output_layer_type}{One of `"shp"`, `"raster"`, or `"both"`. Default `"shp"`.}

\item{quiet}{Logical; suppress informative messages. Default `TRUE`.}
}
\value{
An `sf` polygon layer, a `SpatRaster`, or a list with both.
}
\description{
Combines two class-coded rasters (e.g., exposure & consequence) into an overlap/risk
surface, then reclassifies to `out_classes` bins. Inputs are assumed to have integer
classes in `1â€¦n_classes` (0 or NA treated as background).
}
\examples{
species  <- data.frame(long = rnorm(80, 0, 10),  lat = rnorm(80, 0, 10))
stressor <- data.frame(long = rnorm(100, 0, 10), lat = rnorm(100, 0, 10))
kde_spe <- get_class_kernel(species,  output_layer_type = "raster")
kde_str <- get_class_kernel(stressor, output_layer_type = "raster")
# Ensure same grid (nearest to preserve class labels)
kde_str <- terra::project(kde_str, kde_spe, method = "near")
overlap <- get_overlap_kernel(kde_spe, kde_str, method = "product", output_layer_type = "raster")
terra::plot(overlap)
}
