% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/risaplot.R
\name{risaplot}
\alias{risaplot}
\title{Plot RISA spatial outputs}
\usage{
risaplot(x)
}
\arguments{
\item{x}{An object of class `risaMaps` or `risaHRA`.
- For `risaMaps`: the object must contain lists of species and stressor
  kernel density maps (`species_kernel_maps`, `stressor_kernel_maps`),
  and optionally `overlap_maps` and an `area_of_interest` polygon.  
- For `risaHRA`: the object must contain total risk and reclassified
  maps (e.g., `total_raw`, `total_hotspots_reclassified`), and optionally
  per-stressor risk layers and `area_of_interest`.}
}
\value{
A **list of `ggplot` objects**, typically including maps for species,
stressors, overlaps, and total risk (depending on input class).
}
\description{
Generates publication-ready `ggplot2` maps from RISA output objects
(either `risaMaps` or `risaHRA` classes). It automatically detects whether
the inputs are rasters (`SpatRaster`) or vector (`sf`) objects and
produces a consistent set of plots for species, stressors, overlaps, and
risk outputs.
}
\details{
The function handles both raster- and vector-based outputs:
\describe{
  \item{Raster inputs}{All `SpatRaster` objects are converted to data frames
    and plotted using `geom_tile()` for efficient rendering. The resulting
    plots are faceted by species, stressor, or overlap group.}
  \item{Vector inputs}{All `sf` objects are combined with a grouping column
    and plotted using `geom_sf()`. Faceting follows the same structure as for
    rasters.}
}

Reclassified values are automatically converted to ordered factors with
levels: `"None"`, `"Low"`, `"Medium"`, and `"High"`.

The area of interest (AOI) is overlaid as a transparent polygon when
available.
}
\section{For `risaMaps` objects}{

When `x` is of class `risaMaps`, the function returns a list of three plots:
\itemize{
  \item \strong{Species KDE:} Kernel density maps of each species'
    occurrence probability or spatial use.
  \item \strong{Stressor KDE:} Kernel density maps of each stressor’s
    spatial influence or exposure intensity.
  \item \strong{Species–Stressor Overlaps:} Combined maps showing
    the co-occurrence of species and stressor distributions.
}
All layers are faceted by species or stressor name, and overlaid with the
area of interest (AOI) when available.
}

\section{For `risaHRA` objects}{

When `x` is of class `risaHRA`, the function returns a list of risk maps
depending on the hierarchical depth of the object (i.e., if one or more species
/ habitats are considered.):
\describe{
  \item{Depth 2 (species-level HRA):}{
    \itemize{
      \item \strong{Stressor risk (raw):} Per-stressor total risk intensity.
      \item \strong{Stressor risk (reclassified):} Per-stressor risk ratings
        converted to ordinal classes ("None", "Low", "Medium", "High").
      \item \strong{Highest stressor risk:} Highest risk level across
        stressors (reclassified).
      \item \strong{Total (combined) risk:} Aggregated total risk across
        all stressors.
      \item \strong{Total (combined) risk, reclassified:} Reclassified
        ordinal version of the total risk.
    }
  }
  \item{Depth > 2 (ecosystem-level HRA):}{
    \itemize{
      \item \strong{Species-level risk maps:} Raw and reclassified risk
        maps for each modeled species.
      \item \strong{Stressor-specific risk maps:} Raw and reclassified
        species–stressor risk maps (faceted by species and stressor).
      \item \strong{Ecosystem risk (raw and reclassified):} Overall
        combined risk maps integrating all species and stressors.
    }
  }
}
}

\section{Performance}{

Internally, this function uses `purrr::map_dfr()` and `vctrs::vec_rbind()`
for fast concatenation of multiple raster or vector layers, avoiding costly
iterative `rbind()` calls. `geom_raster()` is used instead of `geom_tile()`
to optimize large raster plotting.
}

\examples{
\dontrun{
# Example with risaMaps
plots <- risaplot(risa_obj)
plots[[1]] # Plot first ggplot output

# Example with risaHRA
hra_plots <- risaplot(hra_obj)
patchwork::wrap_plots(hra_plots)
}

}
\seealso{
[risa::risaMaps()], [risa::risaHRA()], [ggplot2::geom_raster()],
[ggplot2::geom_sf()], [vctrs::vec_rbind()]
}
